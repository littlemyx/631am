.itemWrapper {
  --offset-x: 0;
  --offset-y: 0;
  --k: 1;
  --base-perspective: 10cm;
  --adapted-offset-x: calc((var(--offset-x) - var(--deflation-x-ratio)));
  --adapted-offset-y: calc((var(--offset-y) + var(--deflation-y-ratio)));
  --abs-y: max(var(--adapted-offset-y), calc(var(--adapted-offset-y) * -1));
  --abs-x: max(var(--adapted-offset-x), calc(var(--adapted-offset-x) * -1));

  --x-squared: calc(var(--abs-x) * var(--abs-x));
  --y-squared: calc(var(--abs-y) * var(--abs-y));

  --e-to-negative-x2-y2: calc(
    1 / (1 + var(--k) * (var(--x-squared) + var(--y-squared)))
  );
  --inverted-function: calc(2 - var(--e-to-negative-x2-y2));

  perspective: calc(var(--base-perspective) * var(--inverted-function));

  transform-style: preserve-3d;
  position: relative;

  &.active > * {
    transition: transform 4000ms cubic-bezier(0, 1.18, 0.25, 1);
    --rotation-x: calc(var(--adapted-offset-x) * 10deg);
    --rotation-y: calc(var(--adapted-offset-y) * 10deg);
    transform: translate3d(
        calc(-1 * var(--deflation-x) * 1px),
        calc(-1 * var(--deflation-y) * 1px),
        100px
      )
      rotate3d(0, 1, 0, var(--rotation-x)) rotate3d(1, 0, 0, var(--rotation-y));
  }
}

.itemWrapper > * {
  transition: transform 4000ms cubic-bezier(0, 1.18, 0.25, 1);
  box-shadow: none;
}
